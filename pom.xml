<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.aiblockchain</groupId>
  <artifactId>aiblockchain-websocket</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>AI Block Chain Websocket</name>
  <description>AI Blockchain Websocket Services</description>
  <packaging>jar</packaging>
  
	<repositories>
	    <!--other repositories if any-->
	    <repository>
	        <id>project.local</id>
	        <name>project</name>
	        <url>file:${project.basedir}/repo</url>
	    </repository>
	</repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>	
    
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <!-- exclude unused Sun jars which otherwise have to be manually downloaded into the local Maven repository -->
      <exclusions>
        <exclusion>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.jms</groupId>
          <artifactId>jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jdmk</groupId>
          <artifactId>jmxtools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jmx</groupId>
          <artifactId>jmxri</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.0</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>18.0</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    	    
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.3.6</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20160810</version>
    </dependency>					

    <dependency>
      <groupId>com.eclipsesource.minimal-json</groupId>
      <artifactId>minimal-json</artifactId>
      <version>0.9.1</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>5.0.0.Alpha2</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>4.3.7.RELEASE</version>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>4.3.7.RELEASE</version>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>4.3.7.RELEASE</version>
    </dependency>
                        
    <dependency>
      <groupId>org.glassfish.tyrus.bundles</groupId>
      <artifactId>tyrus-standalone-client</artifactId>
      <version>1.9</version>
    </dependency>
		
    <!-- https://mvnrepository.com/artifact/com.google/bitcoinj -->
    <dependency>
      <groupId>com.google</groupId>
      <artifactId>bitcoinj</artifactId>
      <version>0.11.1</version>
      <scope>test</scope>
    </dependency>		
    
    <!-- Local Jars added for compiling for texai -->		
    <dependency>
	    <groupId>org.texai</groupId>
	    <artifactId>CoinSkills</artifactId>
	    <version>1.0</version>
	    <scope>system</scope>
      <systemPath>${basedir}/lib/CoinSkills-1.0.jar</systemPath>
    </dependency>     	  	 
  </dependencies>  
  
    <build>
    <finalName>aiblockchain-websocket</finalName>
    <pluginManagement>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>false</downloadJavadocs>
        </configuration>
      </plugin>
             
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <showDeprecation>true</showDeprecation>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <configuration>
          <source>1.8</source>
          <encoding>utf8</encoding>
          <quiet>false</quiet>
          <links>
            <link>http://java.sun.com/javase/8/docs/api/</link>
          </links>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <!-- run each unit test in a separate forked JVM to avoid inconsistences due to static class state -->
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>
      
      <plugin>
        <!-- Build an executable JAR -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <!-- DO NOT include log4j.properties file in your Jar -->
          <!-- <excludes>
            <exclude>**/log4j.properties</exclude>
          </excludes> -->
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <!-- <mainClass>com.aiblockchain.server.websocket.WebSocketServer</mainClass> -->
              <mainClass>com.aiblockchain.server.websocket.WebSocketSslServer</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin> 
            
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.4.10</version>
        <configuration>
          <imageName>aiblockchain-websocket</imageName>
          <imageTags>
            <!-- <imageTag>${project.version}</imageTag> -->
            <imageTag>latest</imageTag>
          </imageTags>
          <baseImage>java:8</baseImage>
          <entryPoint>["java", "-cp", "target/lib/*:target/aiblockchain-websocket.jar", "-Dlog4j.debug", "-Dlog4j.configuration=log4j.properties", "-jar", "/apps/${project.build.finalName}.jar", "20000"]</entryPoint>
          <pushImage>false</pushImage>
          <!-- copy the service's jar file from target into the root directory of the image -->
          <resources>
            <resource>
              <targetPath>/apps/</targetPath>
              <directory>${project.build.directory}</directory>
              <includes>
                <include>${project.build.directory}/log4j.properties</include>
                <include>${project.build.finalName}.jar</include>                       
              </includes>             
              <excludes>
                <exclude>*.iml</exclude>
                <exclude>pom.xml</exclude>
                <!-- <exclude>target/**/*</exclude> -->
              </excludes>
            </resource>
          </resources>
        </configuration>
      </plugin>
            
      <!-- Need this to run in docker -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
              </transformers>                 
            </configuration>
          </execution>
        </executions>
      </plugin>      
    </plugins>
  </build>

</project>
